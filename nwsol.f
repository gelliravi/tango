C  ********************************************************************
C  * SUBROUTINE TO SOLVE NETWORK AND ARMATURE EQUATIONS.
C  ********************************************************************
C
C  Copyright (c) 2013 IncSys (http://incsys.com)
C
C  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRENTY OF ANY KIND,
C  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRENTIES
C  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
C  NONINFRENGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
C  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
C  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
C  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
C  SOFTWARE.
C
      SUBROUTINE NWSOL(NGEN)
      IMPLICIT NONE
      INCLUDE 'cblocks.inc'
      COMPLEX SCALE,ROTATE
      REAL ID,IQ
      COMPLEX CMPLX,CONJG
      COMPLEX VOLD,YFICT
      COMPLEX EFICT(10),E(10)
      REAL DEL(10)
      INTEGER NGEN,I,J,ITER,NFLAG
      REAL ED,EQ,THETA,VD,VD1,VQ,VQ1
      DO 10 I=1,NGEN
      DEL(I)=OUT(I,2)
      EQ=OUT(I,3)
      ED=OUT(I,4)
C  TRANSFORM VOLTAGE TO SYNCHRONOUS REFERENCE.
      THETA=DEL(I)-PI/2.0
      E(I)=CMPLX(ED,EQ)*CMPLX(COS(THETA),SIN(THETA))
10    CONTINUE
      ITER=0
C  LOOP HERE FOR EACH ITERATION.
15    CONTINUE
      ITER=ITER+1
      DO 20 I=1,NGEN
      THETA=DEL(I)-PI/2.0
      SCALE=CMPLX(0.0,(XQ1(I)-XD1(I))*0.5)/CMPLX(R(I),-(XQ1(I)+XD1(I))*
     10.5)
      ROTATE=CMPLX(COS(2.0*THETA),SIN(2.0*THETA))
      EFICT(I)=E(I)+SCALE*CONJG(E(I)-VT(I))*ROTATE
20    CONTINUE
      DO 30 I=1,NGEN
      CT(I)=(0.0,0.0)
      DO 25 J=1,NGEN
25    CT(I)=CT(I)+Y(I,J)*EFICT(J)
30    CONTINUE
      DO 40 I=1,NGEN
      YFICT=CMPLX(R(I),-(XD1(I)+XQ1(I))/2.0)/(R(I)*R(I)+XD1(I)*XQ1(I))
      VT(I)=EFICT(I)-CT(I)/YFICT
40    CONTINUE
C  CHECK FOR CONVERGENCE.
      NFLAG=0
      DO 50 I=1,NGEN
      EQ=OUT(I,3)
      ED=OUT(I,4)
C  TRANSFORM TERMINAL VOLTAGE AND CURRENT TO MACHINE REFERENCE.
      THETA=DEL(I)-PI/2.0
      ROTATE=CMPLX(COS(THETA),-SIN(THETA))
      ID=REAL(CT(I)*ROTATE)
      IQ=AIMAG(CT(I)*ROTATE)
      VD=REAL(VT(I)*ROTATE)
      VQ=AIMAG(VT(I)*ROTATE)
      IF(ABS(EQ-R(I)*IQ-XD1(I)*ID-VQ) .GT. .001) NFLAG=1
      IF(ABS(ED-R(I)*ID+XQ1(I)*IQ-VD) .GT. .001) NFLAG=1
      VD1=ED-R(I)*ID+XQ1(I)*IQ
      VQ1=EQ-R(I)*IQ-XD1(I)*ID
50    CONTINUE
      IF(ITER .GE. 10) GO TO 60
      IF(NFLAG .EQ. 1) GO TO 15
      RETURN
60    WRITE(6,1025)
1025  FORMAT('0 SALIENCY ITERATIONS NOT CONVERGED')
      DO 70 I=1,NGEN
      WRITE(6,1010) I,VT(I),CT(I),VD,VQ,VD1,VQ1,ID,IQ
1010  FORMAT(' TERM',I5,10F10.4)
70    CONTINUE
      STOP
      END

